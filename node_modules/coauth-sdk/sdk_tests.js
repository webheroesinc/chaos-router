
var CoAuth		= require('./sdk.js');
var uuid		= require('node-uuid');
var assert		= require('assert');

var bunyan		= require('bunyan');
var log			= bunyan.createLogger({
    name: "coauth_sdk",
    level: 'trace'
});

var coauth		= CoAuth('coauth', 'da57099e-e378-4db1-8fd2-579cf2b49827', {
    api_url: 'http://localhost:2884'
});

function create(cb) {
    var email		= uuid.v4() + "@webheroes.ca";
    coauth.create_user(email, "testing", function(data) {
	console.log( data );
	cb ? cb(email, data) : null;
    });
}
function update_ident(email, cb) {
    var new_email	= uuid.v4() + "@webheroes.ca";
    coauth.update_user(email, new_email, function(data) {
	console.log( data );
	cb ? cb(new_email, data) : null;
    });
}
function update_pwd(email, cb) {
    coauth.update_user(email, undefined, 'testing', 'testing2', function(data) {
	console.log(data);
	cb ? cb(data) : null;
    });
}


create(function(email) {
    coauth.get_user(email, function(data) {
	console.log(data);
	assert(data.error === undefined);
	var user_id	= data.user_id;
	coauth.create_user(email, '', function(data) {
	    console.log(data);
	    assert(data.error !== undefined);
	    
	    update_ident(email, function(new_email, data) {
		console.log(new_email, data, user_id);
		assert(data.user_id === user_id);
		
		update_pwd(new_email, function(data) {
		    update_pwd(new_email, function(data) {
			assert(data.error !== undefined);

			coauth.archive_user(new_email, function(data) {
			    console.log(data);
			    coauth.archive_user(new_email, function(data) {
				console.log(data);
				assert(data.error !== undefined);
				
				coauth.unarchive_user(new_email, function(data) {
				    console.log(data);
				    coauth.unarchive_user(new_email, function(data) {
					console.log(data);
					assert(data.error !== undefined);
					logins();
				    });
				});
			    });
			});
		    });
		});
	    });
	});
    });
});

function logins() {
    create(function(email) {
	coauth.auth(email, 'testing', function(auth) {
	    console.log(auth);
	    assert(auth.session !== undefined);
	    coauth.auth_by_session(auth.session, function(auth) {
		console.log(auth);
		assert(auth.session !== undefined);
	    });
	});
    });
}
// function getArgs(args, tmpl, callback) {
//     var cb, argMap={}, args	= Array.prototype.slice.call(args);
//     if (callback && typeof args[args.length-1] === 'function')
// 	var cb			= args.pop();
//     for(var i in tmpl)
// 	if (args.length > 0)
// 	    argMap[tmpl[i]]	= args.shift();
//     if (callback)
// 	argMap['callback']	= cb;
//     return argMap;
// }

// function test() {
//     return getArgs(arguments, ['pwd', 'new_pwd'], true);
// }

// console.log( test(function() {}) );
// console.log( test('testing',function() {}) );
// console.log( test('testing','testing2',function() {}) );
// console.log( test('testing','testing2') );
