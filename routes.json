{
    "chat": {
	":room": {
	    "#_response": {
		"title": "< data.title",
		"message": "< data.message"
	    },
	    "#_trigger": [
		"/chat/{path.room}"
	    ]
	}
    },
    "get": {
	"empty_method": {
	    "#_execute": [
		[]
	    ]
	},
	"people": {
	    "#_table": "people",
            "#_structure": {
		"< person_id": {
		    "id": "< person_id",
		    "name": {
			"first": "< first_name",
			"last": "< last_name",
			"full": "{first_name} {last_name}"
		    },
		    "phone": "< phone_number",
		    "personality": "< personality"
		}
            },
	    "create": {
		"#_trigger": [
		    "/get/people/{$result.id}",
		    "/get/people"
		]
	    }
	},
	"test_method": {
	    "#_execute": [
		["hello_world"]
	    ]
	},
	"parent_class_test": {
	    "#_execute": [
		["ParentClass.heythere"]
	    ]
	},
	"responses": {
	    "static": {
		"#_response": {
		    "message": "this is inline static data"
		}
	    },
	    "file": {
		"#_response": "../../static_result.json"
	    },
	    "dynamic_file": {
		"#_response": "< file"
	    },
	    "dynamic": {
		"#_response": "< name"
	    }
	},
	"test_validate": {
	    ":id": {
		"#_validate": [
		    ["Validate.pass", "< path.id"]
		],
		"#_table": "people",
		"#_where": "person_id = {path.id}",
		"#_structure": {
		    "id": "= {person_id}",
		    "name": {
			"first": "< first_name",
			"last": "< last_name",
			"full": "{first_name} {last_name}"
		    },
		    "phone": "< phone_number",
		    "personality": "< personality"
		}
	    },
	    "fail_false": {
		"#_validate": [
		    ["fail_false", "hello", "world"]
		]
	    },
	    "fail_message": {
		"#_validate": [
		    ["fail_message", "hello", "world"]
		]
	    },
	    "fail_error": {
		"#_validate": [
		    ["fail_error", "hello", "world"]
		]
	    },
	    "class_method": {
		"#_validate": [
		    ["TestValidationClass.required_not_empty", "", "= []"]
		]
	    },
	    "string": {
		"#_validate": [
		    "= 'This is not a pass'"
		]
	    }
	},
	"testBase": {
	    "#_base": "../secondBase",
	    "#_where": "person_id = 1"
	},
	"secondBase": {
	    "#_base": "../baseTest",
	    "#_structure": {
		"id": "= {person_id}",
		"name": {
		    "first": "< first_name",
		    "last": "< last_name",
		    "full": "{first_name} {last_name}"
		},
		"phone": "< phone_number",
		"personality": "< personality"
	    }
	},
	"baseTest": {
	    "#_table": "people"
	}
    },
    "upload": {
	"#_execute": [
	    ["uploadTest"]
	]
    }
}
